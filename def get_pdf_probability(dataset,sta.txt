def get_pdf_probability(dataset,startrange,endrange):#define probability function with starting and ending dataset
    from matplotlib import pyplot    # import libraries
    from scipy.stats import norm
    import seaborn as sns
    ax = sns.distplot(dataset,kde=True,kde_kws={'color':'blue'},color='Green'):#distplot-kde-kernal density function is giving true and giving blue color ,then onlygetting curve,kws -histogram color green getting graph
    pyplot.axvline(startrange,color='Red'):#getting dataset starting and ending dataset from user and plot pyplot
    pyplot.axvline(endrange,color='Red')   giving start value color -Red and end value color Red with axis verticle
    #generate a sample
    sample = dataset
    #calculate parameters
    sample_mean =sample.mean() :calculate Mean std import scipy.stats import norm getting distribution curve
    sample_std =sample.std()
    print('Mean=%.3f, Standard Deviation=%.3f' % (sample_mean, sample_std)) 
    #define the distribution
    dist = norm(sample_mean, sample_std)  :#plot Normal distribution curve 
    #sample probabilities for a range of outcomes
    values = [value for value in range(startrange, endrange)]: #for loop in one line code assign values in starting and ending range and getting list of table  in one line code.this is for loop in one line code
    probabilities = [dist.pdf(value)for value in values]: #from pdfvalue getting dist plot from this calculate probability
    prob=sum(probabilities):#this is summatiom of probability function
    print("The area between range({},{}):{}".format(startrange,endrange,sum(probabilities)))
    return prob

for loop normal code:
mylist - ['1','2','3',]
for i in mrlist:
    mylist.append(i,upper())
 print(mylist)
